// generated from rosidl_adapter/resource/srv.idl.em
// with input from handbot_interfaces/srv/GetPlanningScene.srv
// generated code does not contain a copyright notice

#include "moveit_msgs/msg/PlanningSceneWorld.idl"
#include "sensor_msgs/msg/Image.idl"
#include "sensor_msgs/msg/PointCloud2.idl"

module handbot_interfaces {
  module srv {
    @verbatim (language="comment", text=
      "Request")
    struct GetPlanningScene_Request {
      @verbatim (language="comment", text=
        "e.g., \"box\", \"cylinder\"")
      string target_shape;

      @verbatim (language="comment", text=
        "Approximate dimensions for identification")
      sequence<double> target_dimensions;
    };
    struct GetPlanningScene_Response {
      @verbatim (language="comment", text=
        "Response" "\n"
        "Contains CollisionObjects for all detected objects")
      moveit_msgs::msg::PlanningSceneWorld scene_world;

      @verbatim (language="comment", text=
        "Full scene point cloud")
      sensor_msgs::msg::PointCloud2 full_cloud;

      @verbatim (language="comment", text=
        "RGB image of the scene")
      sensor_msgs::msg::Image rgb_image;

      @verbatim (language="comment", text=
        "ID of the target object in the PlanningSceneWorld")
      string target_object_id;

      @verbatim (language="comment", text=
        "ID of the support surface in the PlanningSceneWorld")
      string support_surface_id;

      @verbatim (language="comment", text=
        "Indicates if the operation was successful")
      boolean success;
    };
  };
};
